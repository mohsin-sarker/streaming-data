# This is a basic workflow to help you get started with Actions

name: streaming-data

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: run-tests
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Python Setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      # Install dependencies and run vulnerability checks
      - name: Install Dependencies
        run: |
          make create-environment
          source venv/bin/activate
          make requirements
          make dev-setup
          
      #Create a Safety Cli account and get Safety_api_key for safety scan
      - name: Run All Checks
        env:
          SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}
        run: |
          source venv/bin/activate
          make run-checks
  

  deploy-terraform:
    name: deploy-terraform
    runs-on: ubuntu-latest
    needs: build
    environment: production

    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Set Guardian API KEY Environment Variable
        run: echo "TF_VAR_guardian_api_key=${{ secrets.GUARDIAN_API_KEY }}" >> $GITHUB_ENV

      - name: Terraform init
        working-directory: terraform
        run: terraform init -reconfigure

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

